UTC20160501

On the Descent of Programs from Reconfigurable Hardware

As a rule, programs are specified in flexible, virtualized environments - the mind of the programmer, high level source languages - and ultimately implemented in the constrained, physical environment of a machine's logic circuits, traversing some number of more or less fixed translation layers in-between. Dynamic, partially reconfigurable hardware, primarily Field Programmable Gate/Transistor Arrays, bend this rule by exposing designated portions of their circuitry to functional modification - portions, but not the whole. James will present on Pervasively Reconfigurable Computing, an ongoing project to build a computing device that is homogeneously, component-wise reconfigurable, at a finer-grained scale than FPG/TAs. Specifically, a proposed primitive hardware element is described, the Universal Cell, which extends Reversible Logic Elements with Memory (Morita, 2013) with certain features of Reconfigurable Asynchronous Logic Automata (Dalrymple, 2011). This talk will contain a bit of theory, a bit of philosophy, and a bit of Scheme code.