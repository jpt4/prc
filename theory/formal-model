A mathematical formalization of the Universal Cell

jpt4

UTC20151024

The hardware of a PRC machine must be equally formally specified as
the software which it executes. Further, this formal model must
provide complete "logical coverage" in the sense used by Null
Convention Logic: every process of the hardware must be reflected in
the model which describes it, such that the function of compositions
of primitive hardware elements may be deduced from the composition of
their formal descriptors.

Intuitively, digital logic circuits transmit information by
propagating signals between elements. Elements, e.g. gates, do not
operate until a signal reaches them, nor affect other elements aside
from sending signals. This implies an ordering to events that
corresponds with spatial proximity: signals reach an element, are
processed, and new ones repropagated. In this way, all effects are
local, and can be determined by following a contiguous trace of prior
causes where each successive step identifies a logical transformation
with a transition in space.

A Universal Cell has two primary operational modes: fixed and
fluid. When fixed, a UC performs in the role for which it was
configured during its last fluid phase. The current PRC model
describes UCs as having two fixed roles, "wire" and "proc"
(processor), and one fluid role, "stem", but the general formalism is
extensible to other possibilities. Mathematically, the UC is a Mealy
Machine - a Finite State Machine that reads and writes symbols.

A UC in isolation:

UC = {Q, q0, SIG, GAM, DEL}

Q   := set of all possible UC states
q0  := initial UC state
SIG := set of input symbols
GAM := set of output symbols
DEL := transition function

Q = ROLE x HILO x BUF x MEM, s.t. if HILO and BUFR =/= {}, then ROLE =
                                  stem.

ROLE = {stem, rlem, wire} 

HILO = {A

q0 = {stem, {}, {}}